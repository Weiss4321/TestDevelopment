package hr.vestigo.modules.collateral.common.yoy4;

import hr.vestigo.framework.remote.transaction.*;
import hr.vestigo.framework.remote.*;
import hr.vestigo.modules.collateral.common.yoy6.GCTCData;
import hr.vestigo.modules.collateral.common.yoy6.YOY64;

import java.sql.*;

     
public class YOY43 {
  
	public static String cvsident = "@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/common/yoy4/YOY43.sqlj,v 1.27 2017/06/01 12:03:38 hrazst Exp $";

	private ConnCtx ctx=null;
	private RemoteContext rc=null;
	private CollHeadUpdateData chud=null;
	 
	Date date=null; 

	public YOY43(RemoteContext rc, CollHeadUpdateData chud) throws Exception {
		this.ctx = rc.getContext();
		this.rc=rc;
		this.chud=chud;		
	}
	       
	public void updateCollHead() throws Exception{
		debug("UPDATE COLL_HEAD");	
		getDateTime(); 
		chud.USER_LOCK = chud.CREATE_DATE_TIME;

		//update basic_data_status samo ako je isti 0	
		if ((chud.save_ver_aut_flag).equalsIgnoreCase("1")) {
			YOY46 YOY46=new YOY46(rc);
			
			CollCheckData chkObj=new CollCheckData();   
			chkObj.col_hea_id = chud.COL_HEA_ID;
			chkObj.col_type_id = chud.COL_TYPE_ID;
			chkObj.org_uni_id = chud.ORIGIN_ORG_UNI_ID;
			chkObj.indikator_insert_update = "U";			
			rc.debug("...PROVJERA OSTALIH PODATAKA i postavljanje statusa.....)");
			YOY46.checkInputDataForSave(chkObj);
			rc.debug ( "...ZAVRSILA PROVJERA  OSTALIH PODATAKA i postavljanje statusa .....)");		
			
			chud.BASIC_DATA_STATUS = chkObj.basic_data_status;
			chud.COLL_DATA_STATUS = chkObj.coll_data_status;
			chud.MORTGAGE_STATUS = chkObj.mortgage_status;
			chud.COVER_INDIC = chkObj.cover_indic;
		} else if ((chud.save_ver_aut_flag).equalsIgnoreCase("0")) {
			if ((chud.BASIC_DATA_STATUS).equalsIgnoreCase("1"))	chud.BASIC_DATA_STATUS = "0"; 
			if ((chud.MORTGAGE_STATUS).equalsIgnoreCase("1")) chud.MORTGAGE_STATUS = "0"; 			
			if ((chud.COVER_INDIC).equalsIgnoreCase("1")) chud.COVER_INDIC = "0"; 			
			if ((chud.COLL_DATA_STATUS).equalsIgnoreCase("1")) chud.COLL_DATA_STATUS = "0"; 
		}
		
		YOY64 yoy64=new YOY64(rc);
        GCTCData data=yoy64.getGCTCData(chud.COL_CAT_ID, chud.COL_TYPE_ID, chud.COL_SUB_ID, chud.COL_GRO_ID);
        
        chud.gctc_id = data.gctc_id;
        chud.gctc_code = data.gctc_code;
        chud.gctc_desc = data.gctc_desc;
        chud.object_type_id = data.object_type_id;
        chud.object_type_code = data.object_type_code;
        chud.object_type_desc = data.object_type_desc;
        chud.property_type_id = data.property_type_id;
        chud.property_type_code = data.property_type_code;
        chud.property_type_desc = data.property_type_desc;
        chud.endorsement_type_id = data.endorsement_type_id;
        chud.endorsement_type_code = data.endorsement_type_code;
        chud.endorsement_type_desc = data.endorsement_type_desc;
		
		debug(chud.toString());

		try{	
			 
			#sql [ctx]{ 
			    UPDATE coll_head
				    SET  col_desc = 			:(chud.Coll_txtDesc), 
		                 real_est_euse_id = 	:(chud.REAL_EST_EUSE_ID), 
						 real_est_estn_valu = 	:(chud.Coll_txtEstnValu), 
						 real_est_estn_date = 	:(chud.Coll_txtEstnDate),
						 real_est_datn_from = 	:(chud.Coll_txtDatnFrom),
						 real_est_datn_unti = 	:(chud.Coll_txtDatnUnti), 
						 real_est_nomi_desc = 	:(chud.Coll_txtNomiDesc),
						 real_est_nomi_valu = 	:(chud.Coll_txtNomiValu),
						 real_est_nomi_date = 	:(chud.Coll_txtNomiDate),
						 real_est_liqu_valu = 	:(chud.Coll_txtLiquValu),
						 real_est_liqu_date = 	:(chud.Coll_txtLiquDate),
						 real_est_bptc_valu = 	:(chud.Coll_txtBptcValu),
						 real_est_bptc_date = 	:(chud.Coll_txtBptcDate),
						 real_est_nm_cur_id = 	:(chud.REAL_EST_NM_CUR_ID),
						 cus_id = 				:(chud.CUS_ID), 
						 coll_cus_id = 			:(chud.COLL_CUS_ID),
						 date_to_lop = 			:(chud.Coll_txtDateToLop),
						 date_rec_lop = 		:(chud.Coll_txtDateRecLop),
						 rec_lop =				:(chud.Coll_txtRecLop),
						 com_doc = 				:(chud.Coll_txtComDoc),
						 missing_doc = 			:(chud.Coll_txtMissingDoc),
						 date_to_doc = 			:(chud.Coll_txtDateToDoc),
						 date_rec_doc = 		:(chud.Coll_txtDateRecDoc),
						 reva_coef = 			:(chud.Coll_txtRevaCoefMan), 	
						 reva_date = 			:(chud.Coll_txtRevaDate),
						 reva_date_am = 		:(chud.Coll_txtRevaDateAM), 
						 reva_bvalue = 			:(chud.Coll_txtRevaBValue),
						 reva_bdate = 			:(chud.Coll_txtRevaBDate),
						 reva_bdate_am = 		:(chud.Coll_txtRevaBDateAM),
						 amort_age = 			:(chud.Coll_txtAmortAge),
						 amort_per_cal_id = 	:(chud.AMORT_PER_CAL_ID),
						 amort_val_cal = 		:(chud.Coll_txtAmortValCal),
						 nepo_value = 			:(chud.Coll_txtNepoValue),
						 nepo_date = 			:(chud.Coll_txtNepoDate), 	
						 nepo_per_cal = 		:(chud.Coll_txtNepoPerCal),
 
						 weigh_value =			:(chud.Coll_txtAcouValue),
						 weigh_date = 			:(chud.Coll_txtAcouDate),
						 weigh_bvalue =			:(chud.Coll_txtAcouBValue),
						 weigh_bdate =			:(chud.Coll_txtAcouBDate),
						 sum_limit_val = 		:(chud.Coll_txtSumLimitVal),
						 sum_limit_dat = 		:(chud.Coll_txtSumLimitDat),
						 sum_part_val = 		:(chud.Coll_txtSumPartVal),
						 sum_part_dat =			:(chud.Coll_txtSumPartDat),
						 avail_value =			:(chud.Coll_txtAvailValue),
						 avail_per_cal = 		:(chud.Coll_txtAvailPerCal),
						 avail_date = 			:(chud.Coll_txtAvailDate),
						 inspol_ind =			:(chud.INSPOL_IND),
						 col_place = 			:(chud.COL_PLACE),
						 col_county =			:(chud.COL_COUNTY),
						 col_district = 		:(chud.COL_DISTRICT),
						 col_resi_quar =		:(chud.COL_RESI_QUAR),
						 coll_mvp_ponder = 		:(chud.Coll_txtCollMvpPonder),
						 coll_hnb_ponder =		:(chud.Coll_txtCollHnbPonder),	
						 coll_rzb_ponder =		:(chud.Coll_txtCollRzbPonder),	 	
						 real_est_date_from = 	:(chud.Coll_txtDateFrom),
						 real_est_date_unti =	:(chud.Coll_txtDateUnti),
						 real_est_add_data =	:(chud.Coll_txtAddData),
		                 real_est_spec_stat =   :(chud.SPEC_STATUS),
						 use_id = 				:(chud.USE_ID),        
						 user_lock =			:(chud.CREATE_DATE_TIME),
						 eligibility =			:(chud.Coll_txtEligibility),
						 acum_buy_value =		:(chud.Coll_txtAcumBuyValue),
						 org_uni_id = 			:(chud.ORG_UNI_ID),
						 basic_data_status=		:(chud.BASIC_DATA_STATUS),
						 mortgage_status =		:(chud.MORTGAGE_STATUS),
                         cover_indic =			:(chud.COVER_INDIC),
                         coll_data_status =		:(chud.COLL_DATA_STATUS),
					 	 rba_eligibility =		:(chud.ColRba_txtEligibility),
					 	 law_eligibility =		:(chud.KolLow_txtEligibility),
						 rba_elig_dsc = 		:(chud.Kol_txtRbaEligDsc),
						 number			=		:(chud.Coll_txtNumOf),
						 b1_eligibility =		:(chud.Coll_txtB1Eligibility),
		                 b2_irb_elig = 			:(chud.Coll_txtB2IRBEligibility),
			             crm_hnb =              :(chud.Kol_txtCRMHnb),
		                  
		                 used_in_recovery=      :(chud.used_in_recovery),
                         kind_of_recovery=      :(chud.kind_of_recovery),
                         full_amount=           :(chud.full_amount),
                         full_amount_cur_id=    :(chud.full_amount_cur_id),
                         recovery_amount=       :(chud.recovery_amount),
                         recovery_cur_id=       :(chud.recovery_cur_id),
                         recovery_comment=      :(chud.recovery_comment),
                         recovery_date=         :(chud.recovery_date),
                         recovery_rate=         :(chud.recovery_rate),
                         b2_irb_insag_elig=     :(chud.b2_irb_insag_elig),
                         b2_hnb_insag_elig=     :(chud.b2_hnb_insag_elig),
                         use_id_co=             :(chud.use_id_co),
                         real_est_nom_type=     :(chud.real_est_nom_type),
                         prec_exec_est=         :(chud.prec_exec_est),
                         correct_value=         :(chud.correct_value),
                         respect_deadline=      :(chud.respect_deadline),
                         prof_to_rba=           :(chud.prof_to_rba),
                         prof_to_client=        :(chud.prof_to_client),
                         col_eco_life=          :(chud.col_eco_life),
                         real_est_estn_int=     :(chud.real_est_estn_int),
                         est_type=              :(chud.est_type),
                         met_est_1=             :(chud.met_est_1),
                         met_est_2=             :(chud.met_est_2),
                         coll_risk=             :(chud.coll_risk),
                         non_ins_reason=        :(chud.non_ins_reason),
                         ins_cov_coll=          :(chud.ins_cov_coll),
                         recovery_proc_stat=    :(chud.recovery_proc_stat),
                         gctc_id=               :(chud.gctc_id),
                         endorsement_type_id=   :(chud.endorsement_type_id),
                         object_type_id=        :(chud.object_type_id),
                         property_type_id=      :(chud.property_type_id),
		                 contract_type=         :(chud.contract_type),
		                 realization_amount=    :(chud.realization_amount),     
                         realization_cur_id=    :(chud.realization_cur_id),
                         realization_date=      :(chud.realization_date),
                         realization_kind=      :(chud.realization_kind),
                         realization_cost=      :(chud.realization_cost),
		                 part_of_complex=       :(chud.part_of_complex),
                         realization_cost_cur_id=:(chud.realization_cost_cur_id), 
                         for_sale=              :(chud.for_sale),
                        for_sale_date=          :(chud.for_sale_date),
		                takeover_from_bank=     :(chud.takeover_from_bank) 
					WHERE col_hea_id = :(chud.COL_HEA_ID) 
			    }; 
		} catch(SQLException e) {
			if (e.getErrorCode()!=100) throw e;
			else {
				throw new VestigoTMException(1, "YOY43 - Cannot change, user_lock!", "errclt7", null);				
			}
		}
	}
    
    
    
    
    
 
	private void getDateTime() throws Exception {
		#sql[ctx] { 
			SELECT current date, current timestamp 
			INTO :(chud.CURR_DATE), :(chud.CREATE_DATE_TIME)
			FROM sysibm.sysdummy1
		};
	}
	
    private void debug(String s){
        rc.debug("---YOY43 -> " + s);
    } 
}

