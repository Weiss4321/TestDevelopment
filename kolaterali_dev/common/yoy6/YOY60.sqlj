package hr.vestigo.modules.collateral.common.yoy6;


import java.math.BigDecimal;

import hr.vestigo.framework.remote.transaction.*;
import hr.vestigo.framework.remote.*;

import java.sql.SQLException;

import hr.vestigo.modules.collateral.common.yoy0.YOY00;



public class YOY60 {

	public static String cvsident =  "@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/common/yoy6/YOY60.sqlj,v 1.4 2014/06/17 12:23:38 hrazst Exp $";

	private String bank_sign=null;
	private ConnCtx ctx=null;
	private RemoteContext rc=null;
	private YOY00 idGen=null;


	
	public YOY60(RemoteContext rc) throws Exception {
		this.ctx = rc.getContext();
		this.bank_sign = rc.getBankSign();
		this.rc=rc;
		this.idGen=new YOY00(rc);
	}

	public void insertFirstIntoCollListQ(CollListQData plq) throws Exception{
// kod 1. inserta collateral-a 		
		
			BigDecimal id=getId();
			
			#sql [ctx] {
						INSERT INTO coll_list_q
								   (col_lis_q_id, 
									col_lis_typ_id, 
									col_hea_id,
									status, 
									income_time,
									use_id,
									release_time,
									bank_sign,
									cmnt,
									action_type,
									org_uni_id,
			                        coll_deact_reason)
						VALUES 
								   (:(id), 
									:(plq.col_lis_typ_id), 
									:(plq.col_hea_id),
									:(plq.status), 
									:(plq.income_time),
									:(plq.use_id),
									:(plq.release_time),
									:(bank_sign),
									:(plq.cmnt),
									:(plq.action_type),
									:(plq.org_uni_id),
			                        :(plq.coll_deact_reason))
			};
	}	
	public void updateCollListQ(CollListQData plq) throws Exception{
// update kod preraspodjele collaterala s jednog referenta na drugog
// insert kod ponovnog aktiviranja collaterala s arhivske, liste ponistenih, liste obustavljenih		
		BigDecimal col_lis_q_id=null;
		col_lis_q_id=isThereActiveList(plq);
		
		if(col_lis_q_id==null){
			BigDecimal id=getId();
			
			#sql [ctx] {
						INSERT INTO coll_list_q
								   (col_lis_q_id, 
									col_lis_typ_id, 
									col_hea_id,
									status, 
									income_time,
									use_id,
									release_time,
									bank_sign,
									cmnt,
									action_type,
									org_uni_id,
			                        coll_deact_reason)
						VALUES 
								   (:(id), 
									:(plq.col_lis_typ_id), 
									:(plq.col_hea_id),
									:(plq.status), 
									:(plq.income_time),
									:(plq.use_id),
									:(plq.release_time),
									:(bank_sign),
									:(plq.cmnt),
									:(plq.action_type),
									:(plq.org_uni_id),
			                        :(plq.coll_deact_reason))
			};		

			 
		}else{
			
			#sql [ctx] {
						UPDATE
								coll_list_q
						SET
								status = :(plq.status),
								use_id=:(plq.use_id),
								release_time = :(plq.release_time),
								cmnt = :(plq.cmnt),
								action_type = :(plq.action_type),
								org_uni_id=:(plq.org_uni_id)
						WHERE
								col_lis_q_id=:(col_lis_q_id)
			};
		}
	}	

	/**  koristi se kada se nekom akcijom predmet salje s jedne liste (source_list) na drugu listu (target list)
    *    treba napraviti update na slogu za source list i insertirati slog za target listu        
    *    kod akcije ponisti na ref. listi (za sada)
	* @param plq
	* @throws Exception
	*/
	public void update_insert_CollListQ(CollListQData plq) throws Exception{
		plq.col_lis_typ_id=new BigDecimal(plq.source_list);  
		BigDecimal col_lis_q_id=null;
		col_lis_q_id=isThereActiveList(plq);
		rc.info("col_lis_q_id....:"+col_lis_q_id);
		
		if(col_lis_q_id==null){
			BigDecimal id=getId();
			
			#sql [ctx] {
				INSERT INTO coll_list_q
							(col_lis_q_id, 
							col_lis_typ_id, 
							col_hea_id,
							status, 
							income_time,
							use_id,
							release_time,
							bank_sign,
							cmnt,
							action_type,
							org_uni_id,
			                coll_deact_reason)
					VALUES 
					   		(:(id), 
							:(plq.col_lis_typ_id), 
							:(plq.col_hea_id),
							:(plq.status_target_list), 
							:(plq.income_time),
							:(plq.use_id),
							null,
							:(bank_sign),
							null,
							null,
							:(plq.org_uni_id),
			                :(plq.coll_deact_reason))
					};	
			col_lis_q_id = id; 
		}

		#sql [ctx] {  
			UPDATE
					coll_list_q 
			SET
					status = :(plq.status_source_list),
					use_id=:(plq.use_id),
					release_time = :(plq.release_time),
					cmnt = :(plq.cmnt),
					action_type = :(plq.action_type),
					org_uni_id=:(plq.org_uni_id),
		            coll_deact_reason=:(plq.coll_deact_reason)
			WHERE
					col_lis_q_id=:(col_lis_q_id)
		};	
		
		plq.col_lis_typ_id=new BigDecimal(plq.target_list); 
		plq.use_id = plq.target_list_use_id;
//		plq.use_id = null;
		plq.release_time = null; 
		plq.cmnt = null;
		plq.action_type = null;
		plq.org_uni_id = plq.target_list_org_uni_id;
//		plq.org_uni_id = null;
		
		BigDecimal id=getId();
		
		#sql [ctx] {
			INSERT INTO coll_list_q
					   (col_lis_q_id, 
						col_lis_typ_id, 
						col_hea_id,
						status, 
						income_time,
						use_id,
						release_time,
						bank_sign,
						cmnt,
						action_type,
						org_uni_id,
		                coll_deact_reason)
				VALUES 
					   (:(id), 
						:(plq.col_lis_typ_id), 
						:(plq.col_hea_id),
						:(plq.status_target_list), 
						:(plq.income_time),
						:(plq.use_id),
						:(plq.release_time),
						:(bank_sign),
						:(plq.cmnt),
						:(plq.action_type),
						:(plq.org_uni_id),
		                :(plq.coll_deact_reason))
					};		
	}	
	
	public BigDecimal isThereActiveList(CollListQData plq) throws Exception{
		
		BigDecimal col_lis_q_id=null;
		
		try{
	
			if(plq.col_hea_id!=null){
	
				#sql [ctx] {
							SELECT 
									col_lis_q_id 
							INTO
									:(col_lis_q_id)
							FROM
									coll_list_q
							WHERE
									col_hea_id=:(plq.col_hea_id)
							AND
									col_lis_typ_id=:(plq.col_lis_typ_id)
							AND
									status='0'
				};
		
			}
	
	
		}catch(SQLException sqle){
			if (sqle.getErrorCode() == 100) {
		
			}
		}
		
		return col_lis_q_id;
		
	}
	
	private BigDecimal getId() throws Exception{
		return idGen.getNewId();
		
	}

	
}
 
				
			
		
		
