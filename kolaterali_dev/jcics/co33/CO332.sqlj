package hr.vestigo.modules.collateral.jcics.co33;


import hr.vestigo.framework.remote.transaction.ConnCtx;
import hr.vestigo.framework.remote.transaction.RemoteTransaction;
import hr.vestigo.framework.remote.transaction.TransactionContext;
import hr.vestigo.framework.remote.transaction.VestigoTMException;

import hr.vestigo.modules.collateral.common.yoy6.*;


import java.math.BigDecimal;
import java.sql.SQLException;
import java.sql.Timestamp;

  
public class CO332 extends RemoteTransaction {
// akcija obustavi predmet
// insert u tbl. AGR_LIST_Q sloga za akciju CANCEL
// update statusa predmeta
	
	public static String cvsident = "@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/jcics/co33/CO332.sqlj,v 1.3 2011/12/02 14:20:51 hramkr Exp $";
	 
	private DeclCO33 d = null;


	public CO332(DeclCO33 d) {
		this.d = d;
	} 
  
	public void execute(TransactionContext tc) throws Exception {
		
		ConnCtx ctx = tc.getContext();

		String proc_status = "";
		
		BigDecimal col_lis_typ_id = null;
		
		String financial_flag = "";
		Timestamp CREATE_DATE_TIME = null;	
		
		
		#sql [ctx]{ SET TRANSACTION ISOLATION LEVEL READ COMMITTED };

		try {
			
				#sql[ctx]{  
						SELECT
								proc_status,
								financial_flag
						INTO
								:(proc_status),
								:(financial_flag)
						FROM
								frame_agreement
						WHERE
								fra_agr_id=:(d.agrliststop.w_fra_agr_id)
				};  
		}catch(SQLException sqle){
			if (sqle.getErrorCode() == 100) {
				throw new VestigoTMException(1, "Transaction CO332: Predmet nije na ref listi! ","colErr022", null);	
			}
		}				
		
		

// ako je knjizen ne moze se ponistiti ni obustaviti dok se knjizenja ne storniraju, Milka 11.10.2006 privremeno maknuta kontrola
		
/*		if (financial_flag.equals("1")) {
			throw new VestigoTMException(1, "Transaction CO212: Error-nisu stornirana knjizenja! ","colErr010", null);			
		}	*/		
		
// ako je akcija pozvana s monitoring liste treba naci listu na kojoj se trenutno nalazi predmet
		
		if ((d.agrliststop.source_list).equalsIgnoreCase("000000")) {

			try{
					#sql [ctx] {
						SELECT 
								col_lis_typ_id
						INTO
								:(col_lis_typ_id)
						FROM
								agr_list_q
						WHERE
								fra_agr_id=:(d.agrliststop.w_fra_agr_id)
						AND
								status='0'
					};
			}catch(SQLException sqle){
				if (sqle.getErrorCode() == 100) {
					
				}  
			}
			
			d.agrliststop.source_list = col_lis_typ_id.toString();
			
		}


		tc.info("FRA_AGR_ID:...." + d.agrliststop.w_fra_agr_id);
		tc.info("PROC_STATUS:...." + d.agrliststop.w_proc_status);

		#sql[ctx] { 
			SELECT current timestamp 
			INTO :(CREATE_DATE_TIME)
			FROM sysibm.sysdummy1 
		};		
		
		YOY61 YOY61=new YOY61(tc);
		
		CollListQData plq=new CollListQData();   

   
		plq.col_hea_id=d.agrliststop.w_fra_agr_id;	
		
//		 source lista
		plq.source_list = d.agrliststop.source_list;
		plq.status_source_list = "1";		
		plq.release_time = CREATE_DATE_TIME;
		plq.use_id=d.agrliststop.use_id;	
		plq.org_uni_id = d.agrliststop.org_uni_id;
		plq.cmnt=d.agrliststop.CollListQ_txaCmnt;
		plq.action_type=d.agrliststop.action_type;			

//		 target lista		
		plq.target_list = d.agrliststop.target_list;
		plq.status_target_list = "0";		
		plq.income_time = CREATE_DATE_TIME;
		plq.target_list_use_id = null;
		plq.target_list_org_uni_id = null;		

		plq.status=d.agrliststop.w_proc_status;


		tc.info("AGR_FRA_ID .....:" + plq.col_hea_id);
		tc.info("INCOME_TIME ....."+plq.income_time);
		tc.info("USE_ID....."+plq.use_id);
		tc.info("RELEASE TIME .....:" + plq.release_time);
		tc.info("CMNT......:"+plq.cmnt);
		tc.info("ACTION_TYPE ....."+plq.action_type);
		tc.info("ORG_UNI_ID....."+plq.org_uni_id);
		tc.info("SOURCE_LIST .....:" + plq.source_list);
		tc.info("STATUS_SOURCE_LIST......:"+plq.status_source_list);
		tc.info("TARGET_LIST ....."+plq.target_list);
		tc.info("STATUS_TARGET_LIST....."+plq.status_target_list);		
		tc.info("PROC_STATUS....."+plq.status);				
		
		 
		YOY61.update_insert_AgrListQ(plq); 
		
 
		
// napraviti update statusa		

		
		try {
			#sql[ctx]{
					UPDATE
							frame_agreement
					SET
							proc_status = :(d.agrliststop.w_proc_status),
                            user_lock = current timestamp
					WHERE
							fra_agr_id=:(d.agrliststop.w_fra_agr_id)
			};
		}catch(SQLException sqle){
			if (sqle.getErrorCode() == 100) {
				throw new VestigoTMException(1, "Transaction CO332: Predmet nije na ref listi! ","colErr022", null);	
			}
		}  
		
		
	}
	

}


