package hr.vestigo.modules.collateral.jcics.co06;

import hr.vestigo.framework.remote.transaction.*;
import hr.vestigo.modules.collateral.common.yoy4.*;
import hr.vestigo.modules.collateral.common.yoy6.CalculationData;
import hr.vestigo.modules.collateral.common.yoy6.YOY63;
import hr.vestigo.modules.collateral.common.yoyE.*;

import java.sql.Date;
import java.sql.SQLException;

#sql iterator Iter62 (
		String ip_activ_and_pay
		);

public class CO062 extends RemoteTransaction {
 	public static String cvsident = "@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/jcics/co06/CO062.sqlj,v 1.32 2017/12/21 14:04:04 hrazst Exp $";
	private DeclCO06 decl = null;

	private String vrsta = ""; 
	private String sys_cod_id;
	private YOY63 SQLhelper = null;
	CollHeadSelectData chs = new CollHeadSelectData();
	
	public CO062(DeclCO06 decl) {
		this.decl = decl;
	}
	
	public void execute(TransactionContext tc) throws Exception {
		tc.debug ( "......COL_HEA_ID " + decl.collmovableselectmapping.COL_HEA_ID);
		Iter62 iter62=null;	   		
        YOYE0 yoye0 = new YOYE0(tc); 
        YOYE0Data kolData = new YOYE0Data();
        SQLhelper = new YOY63(tc);
        
		ConnCtx ctx = tc.getContext(); 
		#sql [ctx]{SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED};
		//select iz COLL_HEAD		
		YOY42 headSel = new YOY42(tc, chs);
  
		chs.COL_HEA_ID = decl.collmovableselectmapping.COL_HEA_ID;
		
		headSel.selectFromCollHead();
		
		tc.debug ( "......PUNIM DECL  ");		
		// punjenje decla iz objekta chs		
		fillDeclFromCHSObj();				

		tc.debug ( "......COL_HEA_ID " + decl.collmovableselectmapping.Coll_txtCode);
	
		vrsta = decl.collmovableselectmapping.code;
        Date todaySQLDate = null;
        java.util.GregorianCalendar calendar = new java.util.GregorianCalendar();
        long timeT = calendar.getTime().getTime();
        todaySQLDate = new java.sql.Date(timeT);    		  
		
		try{
			if (vrsta.equalsIgnoreCase("POKR")) {
				#sql [ctx] {SELECT 
					col_mov_id,  
					col_hea_id, 
					mov_typ_id, 
					mov_model , 
					mov_ser_num , 
					mov_made_year , 
					mov_reg_sign ,
					mov_hr_reg ,
					mov_dsc ,
					mov_address ,
					mov_place_id ,
					mov_ins_date ,
			        estimate_cus_id 
				INTO
					:(decl.collmovableselectmapping.COL_SEC_ID),    													                                                
					:(decl.collmovableselectmapping.COL_HEA_ID),  	
					:(decl.collmovableselectmapping.SEC_TYP_ID ),                   
					:(decl.collmovableselectmapping.Vehi_txtVehModel), 
					:(decl.collmovableselectmapping.Mov_txtSerNum),                  
                  	:(decl.collmovableselectmapping.Vehi_txtVehMadeYear),                  
					:(decl.collmovableselectmapping.Mov_txtRegSign),
					:(decl.collmovableselectmapping.Mov_txtHrReg) ,
					:(decl.collmovableselectmapping.Ves_txtDsc) , 
					:(decl.collmovableselectmapping.Supp_txtAdresa) ,
					:(decl.collmovableselectmapping.SUP_PLACE_ID) ,
					:(decl.collmovableselectmapping.Vehi_txtVehInsDate) ,
			        :(decl.collmovableselectmapping.Coll_txtEUsePersonCusId)
				FROM coll_movable
				WHERE COL_HEA_ID = :(decl.collmovableselectmapping.COL_HEA_ID) };
			} else if (vrsta.equalsIgnoreCase("ZALI")) {
				#sql [ctx] {SELECT 
					col_sup_id, 
					col_hea_id,   
					sup_dsc , 
					sup_keeper , 
					sup_loc , 
					sup_address , 
					sup_place_id ,
					sup_ins_date ,
					sup_min_ind ,
					sup_min_amount,
			        estimate_cus_id 

				INTO
					:(decl.collmovableselectmapping.COL_SEC_ID),    													                                                
					:(decl.collmovableselectmapping.COL_HEA_ID),  	
					:(decl.collmovableselectmapping.Ves_txtDsc), 
					:(decl.collmovableselectmapping.Supp_txtKeeper),                  
              		:(decl.collmovableselectmapping.Supp_txtLocation),                  
					:(decl.collmovableselectmapping.Supp_txtAdresa),
					:(decl.collmovableselectmapping.SUP_PLACE_ID),
					:(decl.collmovableselectmapping.Vehi_txtVehInsDate),
					:(decl.collmovableselectmapping.Supp_txtMinValue),
					:(decl.collmovableselectmapping.Supp_txtMinAmount),
			        :(decl.collmovableselectmapping.Coll_txtEUsePersonCusId)

				FROM coll_supply
				WHERE COL_HEA_ID = :(decl.collmovableselectmapping.COL_HEA_ID) };				
			}
		 
		}catch(java.sql.SQLException se){
			
			tc.debug ( "......CO062.sqlj select from coll_movable,coll_cupply SQL ErrorCode " + se.getErrorCode());
			tc.debug ( "......CO062.sqlj select from coll_movable,coll_cupply SQL SQLState " + se.getSQLState());
			tc.debug ( "......CO062.sqlj select from coll_movable,coll_cupply SQL Message " + se.getMessage());
			se.printStackTrace();
			throw new VestigoTMException(1, "Transaction CO062: Error selecting coll_movable,coll_cupply ","err411a", null);
		}
				                    
        if(decl.collmovableselectmapping.Coll_txtEUsePersonCusId != null){

            try{
                    #sql [ctx]  {SELECT register_no,
                                        name,
                                        tax_number
                                INTO
                                        :(decl.collmovableselectmapping.Coll_txtEUsePersonId),
                                        :(decl.collmovableselectmapping.Coll_txtEUsePersonName),
                                        :(decl.collmovableselectmapping.Coll_txtEUsePersonIdOIB)
                                FROM  customer  
                                WHERE cus_id =:(decl.collmovableselectmapping.Coll_txtEUsePersonCusId)
                            }; 
            }catch(SQLException e) {
                if (tc.getSQLExHandler().isEmptyRowset(e)) {
                } else {
                    throw e;
                }
            }       
        }          
        
        // dohvat iz tabele MOVABLE_TYPE ili SUPPLY_TYPE       
		try{    
			if (decl.collmovableselectmapping.SEC_TYP_ID != null){
				if (vrsta.equalsIgnoreCase("POKR")) {
	             
					#sql [ctx] {SELECT	mov_typ_code, mov_typ_dsc
	             			INTO	:(decl.collmovableselectmapping.Coll_txtSecTypeCode), :(decl.collmovableselectmapping.Coll_txtSecTypeName)
	             			FROM 	MOVABLE_TYPE 
	     	       			WHERE 	mov_typ_id = :(decl.collmovableselectmapping.SEC_TYP_ID) };
				}
	    	}
	    }catch(SQLException e){
            if (tc.getSQLExHandler().isEmptyRowset(e)) {
            } else {
                throw e;
            }
	    }

	    // dohvat iz system_code_value
	       try{ 
			if (decl.collmovableselectmapping.Supp_txtKeeper != null) {  
				sys_cod_id="clt_keeper";
				#sql [ctx] {
                    SELECT sys_code_desc
                        INTO :(decl.collmovableselectmapping.Supp_txtKeeperName)
                        FROM system_code_value
                        WHERE sys_code_value = :(decl.collmovableselectmapping.Supp_txtKeeper) AND
                              sys_cod_id     = :(sys_cod_id) };
			}	
        }catch(SQLException e){
            if (tc.getSQLExHandler().isEmptyRowset(e)) {
            } else {
                throw e;
            }
        }		    
	     
        // dohvat iz tabele POLITICAL_MAP 
      
		try{    
			if (decl.collmovableselectmapping.SUP_PLACE_ID != null){
	
					#sql [ctx] {SELECT  name
	             			INTO	:(decl.collmovableselectmapping.Supp_txtPlace)
	             			FROM 	POLITICAL_MAP
	     	       			WHERE 	pol_map_id = :(decl.collmovableselectmapping.SUP_PLACE_ID) };					
				
	    	}
	    }catch(SQLException e){
            if (tc.getSQLExHandler().isEmptyRowset(e)) {
            } else {
                throw e;
            }
	    }	    		
    
	    // provjera da li kolateral ima aktivnu policu za koju je placena premija
	    // dohvatiti status police osiguranja i da li je placena premija
	    decl.collmovableselectmapping.ip_activ_and_pay = "N";
		String add_request = "N";	
		#sql[ctx] iter62 = {
								SELECT ip_act_noact as ip_activ_and_pay
	 							FROM insurance_policy
								WHERE col_hea_id = :(decl.collmovableselectmapping.COL_HEA_ID)
								AND ip_act_noact = 'A' and
			    					ip_date_sec_val >= current date and
	                                ip_vali_until >= current date
								fetch first row only
	                              };
		while (iter62.next()) {
			 decl.collmovableselectmapping.ip_activ_and_pay = iter62.ip_activ_and_pay();
             add_request = "D";
			}
			if(iter62!=null) {
		       try {
		           iter62.close();
		       } catch (Exception ignored) {}
		}
        
        //dohvat podataka koji se izracunavaju
        CalculationData cData = SQLhelper.getAllCalculationData(decl.collmovableselectmapping.COL_HEA_ID);               
        
        decl.collmovableselectmapping.Kol_txtPonderMVP = cData.MVP_ponder;
        decl.collmovableselectmapping.Coll_txtWcaAmountDate = cData.wcov_date;
        decl.collmovableselectmapping.Coll_txtWcaAmount = cData.wcov_amount;
        decl.collmovableselectmapping.Coll_txtWcaOrigCurrencyCode = cData.wcov_cur_char;
        decl.collmovableselectmapping.Coll_txtUsedWCAAmount = cData.wca_amount;
        decl.collmovableselectmapping.Coll_txtSumHipToFirstRBA = cData.sum_to_first_RBA_hip; 
        decl.collmovableselectmapping.Coll_txtRealPonderAmount=cData.real_ponder; 
       
        kolData.colHeaId = decl.collmovableselectmapping.COL_HEA_ID;
        kolData.colCurId = decl.collmovableselectmapping.REAL_EST_NM_CUR_ID;
        kolData.nominalAmount = decl.collmovableselectmapping.Coll_txtNomiValu;
        
        kolData.colCatId = decl.collmovableselectmapping.COL_CAT_ID;
        kolData.colTypId = decl.collmovableselectmapping.COL_TYPE_ID;
        if (vrsta.equalsIgnoreCase("POKR"))  
            kolData.colSubTypId = decl.collmovableselectmapping.SEC_TYP_ID;
        else
            kolData.colSubTypId = null;
        
        kolData.addRequest =add_request;

        yoye0.getNoPonderAndPonderRestAmount(kolData);
      
      decl.collmovableselectmapping.Coll_txtAcouValue = kolData.ponderAmount;
      decl.collmovableselectmapping.Coll_txtAcouDate = todaySQLDate;
      
      decl.collmovableselectmapping.Coll_txtAvailValue = kolData.restAmount;
      decl.collmovableselectmapping.Coll_txtAvailDate = kolData.coverDate;
      
      decl.collmovableselectmapping.Coll_txtAvailPonValue = kolData.restPonAmount;
      decl.collmovableselectmapping.Coll_txtNDAvailDate = kolData.NDCoverDate;
      
      decl.collmovableselectmapping.Coll_txtSumPartVal = kolData.exposureAmount;
      decl.collmovableselectmapping.Coll_txtSumPartDat = kolData.exposureDate;   
      
      decl.collmovableselectmapping.Coll_txtCollMvpPonderMin = kolData.minPonder;
      decl.collmovableselectmapping.Coll_txtCollMvpPonder = kolData.dflPonder;
      decl.collmovableselectmapping.Coll_txtCollMvpPonderMax = kolData.maxPonder;
      
      //dorada FBPr200013720 dodavanje kvacice CO za prikaz detalja

      try{ 
          #sql [ctx] {
                      SELECT a.co_ind, app.login, app.user_name, a.co_ts    
                      INTO
                      :(decl.collmovableselectmapping.Coll_txtCoConfirm),
                      :(decl.collmovableselectmapping.Coll_txtCoConfirmUserId),
                      :(decl.collmovableselectmapping.Coll_txtCoConfirmUserName),
                      :(decl.collmovableselectmapping.Coll_txtCoConfirmTime)
                      FROM co_chg_history as a, app_user as app
                      WHERE 
                             a.col_hea_id = :(decl.collmovableselectmapping.COL_HEA_ID)
                      and    a.co_use_id=app.use_id
                      and
                              a.co_ind='D'
                      and
                              a.co_chg_ts is null
                      and co_chg_use_id is null
                      FETCH FIRST ROWS ONLY
                     };  
              
      }catch(SQLException e){
          if (tc.getSQLExHandler().isEmptyRowset(e)) {
          } else {
              throw e;
          }
      }
	} 
	 
	private void fillDeclFromCHSObj () {
		 
		decl.collmovableselectmapping.COL_HEA_ID = chs.COL_HEA_ID;    													                                                
		decl.collmovableselectmapping.COL_TYPE_ID = chs.COL_TYPE_ID;  
		decl.collmovableselectmapping.Coll_txtCode = chs.Coll_txtCode; 
		decl.collmovableselectmapping.Coll_txtDesc = chs.Coll_txtDesc;  
		decl.collmovableselectmapping.REAL_EST_EUSE_ID = chs.REAL_EST_EUSE_ID;
		decl.collmovableselectmapping.Coll_txtEstnValu = chs.Coll_txtEstnValu;                   
		decl.collmovableselectmapping.Coll_txtEstnDate = chs.Coll_txtEstnDate;                   
		decl.collmovableselectmapping.Coll_txtDatnFrom = chs.Coll_txtDatnFrom;                   
		decl.collmovableselectmapping.Coll_txtDatnUnti = chs.Coll_txtDatnUnti;                   
		decl.collmovableselectmapping.Coll_txtNomiDesc = chs.Coll_txtNomiDesc; 
		decl.collmovableselectmapping.Coll_txtNomiValu = chs.Coll_txtNomiValu;                   		
		decl.collmovableselectmapping.Coll_txtNomiDate = chs.Coll_txtNomiDate; 
		decl.collmovableselectmapping.Coll_txtLiquValu = chs.Coll_txtLiquValu;                  		
		decl.collmovableselectmapping.Coll_txtLiquDate = chs.Coll_txtLiquDate;                   		
		decl.collmovableselectmapping.Coll_txtBptcValu = chs.Coll_txtBptcValu;                   		
		decl.collmovableselectmapping.Coll_txtBptcDate = chs.Coll_txtBptcDate; 
		decl.collmovableselectmapping.REAL_EST_NM_CUR_ID = chs.REAL_EST_NM_CUR_ID; 
		decl.collmovableselectmapping.CUS_ID = chs.CUS_ID;   
		decl.collmovableselectmapping.COLL_CUS_ID = chs.COLL_CUS_ID;   
		decl.collmovableselectmapping.Coll_txtDateToLop = chs.Coll_txtDateToLop;   
		decl.collmovableselectmapping.Coll_txtDateRecLop = chs.Coll_txtDateRecLop; 
		decl.collmovableselectmapping.Coll_txtRecLop = chs.Coll_txtRecLop; 
		decl.collmovableselectmapping.Coll_txtComDoc = chs.Coll_txtComDoc;                              		                                      
		decl.collmovableselectmapping.Coll_txtMissingDoc = chs.Coll_txtMissingDoc;                          		                                      
		decl.collmovableselectmapping.Coll_txtDateToDoc = chs.Coll_txtDateToDoc;                          		                                      
		decl.collmovableselectmapping.Coll_txtDateRecDoc = chs.Coll_txtDateRecDoc;                      		                                    
		decl.collmovableselectmapping.Coll_txtRevaCoefMan = chs.Coll_txtRevaCoefMan;
		decl.collmovableselectmapping.Coll_txtRevaDate = chs.Coll_txtRevaDate;                            		                                           
		decl.collmovableselectmapping.Coll_txtRevaDateAM = chs.Coll_txtRevaDateAM;                         		                                         
		decl.collmovableselectmapping.Coll_txtRevaBValue = chs.Coll_txtRevaBValue;                          		                                          
		decl.collmovableselectmapping.Coll_txtRevaBDate = chs.Coll_txtRevaBDate;                           		
		decl.collmovableselectmapping.Coll_txtRevaBDateAM = chs.Coll_txtRevaBDateAM;                       	     
		decl.collmovableselectmapping.Coll_txtAmortAge = chs.Coll_txtAmortAge;                            	    
		decl.collmovableselectmapping.AMORT_PER_CAL_ID = chs.AMORT_PER_CAL_ID;                        	                            
		decl.collmovableselectmapping.Coll_txtAmortValCal = chs.Coll_txtAmortValCal;
		decl.collmovableselectmapping.Coll_txtNepoValue = chs.Coll_txtNepoValue;                           	                            
		decl.collmovableselectmapping.Coll_txtNepoDate = chs.Coll_txtNepoDate;                            	                            
		decl.collmovableselectmapping.Coll_txtNepoPerCal = chs.Coll_txtNepoPerCal; 
		decl.collmovableselectmapping.Coll_txtThirdRight = chs.Coll_txtThirdRight;                          	                            
		decl.collmovableselectmapping.THIRD_RIGHT_CUR_ID = chs.THIRD_RIGHT_CUR_ID;                   	                            
		decl.collmovableselectmapping.Coll_txtThirdRightInNom = chs.Coll_txtThirdRightInNom;                      		                                         
		decl.collmovableselectmapping.Coll_txtThirdRightDate = chs.Coll_txtThirdRightDate;                    	                                                        		                                         
		decl.collmovableselectmapping.Coll_txtHfsValue = chs.Coll_txtHfsValue;                           	                                                        		                                         
		decl.collmovableselectmapping.Coll_txtHfsValueDate = chs.Coll_txtHfsValueDate;                         		                                         
		decl.collmovableselectmapping.Coll_txtHfsValueLastOne = chs.Coll_txtHfsValueLastOne;                      		                                         
		decl.collmovableselectmapping.Coll_txtHfsDateLastOne = chs.Coll_txtHfsDateLastOne;     
		decl.collmovableselectmapping.Coll_txtAcouValue = chs.Coll_txtAcouValue;                     
		decl.collmovableselectmapping.Coll_txtAcouDate = chs.Coll_txtAcouDate;                          
		decl.collmovableselectmapping.Coll_txtAcouBValue = chs.Coll_txtAcouBValue;                        
		decl.collmovableselectmapping.Coll_txtAcouBDate = chs.Coll_txtAcouBDate;  
		decl.collmovableselectmapping.Coll_txtSumLimitVal = chs.Coll_txtSumLimitVal;                                                     
		decl.collmovableselectmapping.Coll_txtSumLimitDat = chs.Coll_txtSumLimitDat;                                                       
		decl.collmovableselectmapping.Coll_txtSumPartVal = chs.Coll_txtSumPartVal;                                                         
		decl.collmovableselectmapping.Coll_txtSumPartDat = chs.Coll_txtSumPartDat;
		decl.collmovableselectmapping.Coll_txtAvailValue = chs.Coll_txtAvailValue;                                                       
		decl.collmovableselectmapping.Coll_txtAvailPerCal = chs.Coll_txtAvailPerCal;                                                       
		decl.collmovableselectmapping.Coll_txtAvailDate = chs.Coll_txtAvailDate;  
		decl.collmovableselectmapping.INSPOL_IND = chs.INSPOL_IND;  
		decl.collmovableselectmapping.COL_PLACE = chs.COL_PLACE; 
		decl.collmovableselectmapping.COL_COUNTY = chs.COL_COUNTY; 
		decl.collmovableselectmapping.COL_DISTRICT = chs.COL_DISTRICT; 
		decl.collmovableselectmapping.COL_RESI_QUAR = chs.COL_RESI_QUAR; 
		decl.collmovableselectmapping.Coll_txtCollMvpPonder = chs.Coll_txtCollMvpPonder;
		decl.collmovableselectmapping.Coll_txtCollHnbPonder = chs.Coll_txtCollHnbPonder; 
		decl.collmovableselectmapping.Coll_txtCollRzbPonder = chs.Coll_txtCollRzbPonder;
		decl.collmovableselectmapping.Coll_txtDateFrom = chs.Coll_txtDateFrom;                   	                         
		decl.collmovableselectmapping.Coll_txtDateUnti = chs.Coll_txtDateUnti;                   	 
		decl.collmovableselectmapping.Coll_txtAddData = chs.Coll_txtAddData;  
		decl.collmovableselectmapping.STATUS = chs.STATUS;                      		                          
		decl.collmovableselectmapping.SPEC_STATUS = chs.SPEC_STATUS;  
		decl.collmovableselectmapping.USE_OPEN_ID = chs.USE_OPEN_ID;
		decl.collmovableselectmapping.USE_ID = chs.USE_ID;
		decl.collmovableselectmapping.Coll_txtOpeningTs = chs.Coll_txtOpeningTs;
		decl.collmovableselectmapping.Coll_txtUserLock = chs.Coll_txtUserLock;
		decl.collmovableselectmapping.Coll_txtEUseIdLogin = chs.Coll_txtEUseIdLogin;
		decl.collmovableselectmapping.Coll_txtEUseIdLoginOIB = chs.Coll_txtEUseIdLoginOIB;
		decl.collmovableselectmapping.Coll_txtEUseIdName = chs.Coll_txtEUseIdName;
		decl.collmovableselectmapping.Coll_txtEstnCurr = chs.Coll_txtEstnCurr;
		decl.collmovableselectmapping.Coll_txtCarrierRegisterNo = chs.Coll_txtCarrierRegisterNo;
		decl.collmovableselectmapping.Coll_txtCarrierName = chs.Coll_txtCarrierName;
		decl.collmovableselectmapping.Coll_txtOwnerRegisterNo = chs.Coll_txtOwnerRegisterNo;
		decl.collmovableselectmapping.Coll_txtOwnerName = chs.Coll_txtOwnerName;
		decl.collmovableselectmapping.Coll_txtThirdRightCurCodeChar = chs.Coll_txtThirdRightCurCodeChar;	
		decl.collmovableselectmapping.Coll_txtUseOpenIdLogin = chs.Coll_txtUseOpenIdLogin;
		decl.collmovableselectmapping.Coll_txtUseOpenIdName = chs.Coll_txtUseOpenIdName;
		decl.collmovableselectmapping.Coll_txtUseIdLogin = chs.Coll_txtUseIdLogin;
		decl.collmovableselectmapping.Coll_txtUseIdName = chs.Coll_txtUseIdName; 					
		decl.collmovableselectmapping.Coll_txtAmortPerCal = chs.Coll_txtAmortPerCal;
		decl.collmovableselectmapping.Coll_txtCollTypeCode = chs.Coll_txtCollTypeCode;
		decl.collmovableselectmapping.Coll_txtCollTypeName  = chs.Coll_txtCollTypeName;
		decl.collmovableselectmapping.USER_LOCK = chs.USER_LOCK;		
		decl.collmovableselectmapping.Coll_txtNmValCurr = chs.Coll_txtNmValCurr;
		decl.collmovableselectmapping.Coll_txtEligibility = chs.Coll_txtEligibility;
		decl.collmovableselectmapping.Coll_txtEligDesc = chs.Coll_txtEligDesc;
		decl.collmovableselectmapping.Coll_txtAcumBuyValue = chs.Coll_txtAcumBuyValue;
		decl.collmovableselectmapping.ORIGIN_ORG_UNI_ID = chs.ORIGIN_ORG_UNI_ID;
		decl.collmovableselectmapping.ORG_UNI_ID = chs.ORG_UNI_ID;
		decl.collmovableselectmapping.USE_ID_VER = chs.USE_ID_VER;
		decl.collmovableselectmapping.USE_ID_AUT = chs.USE_ID_AUT;
		decl.collmovableselectmapping.VERIFICATION_TS = chs.VERIFICATION_TS;
		decl.collmovableselectmapping.AUTORIZATION_TS = chs.AUTORIZATION_TS;
		decl.collmovableselectmapping.MORTGAGE_STATUS = chs.MORTGAGE_STATUS;
		decl.collmovableselectmapping.COLLATERAL_STATUS = chs.COLLATERAL_STATUS;
		decl.collmovableselectmapping.WORKFLOW_INDIC = chs.WORKFLOW_INDIC;
		decl.collmovableselectmapping.COVER_INDIC = chs.COVER_INDIC;
		decl.collmovableselectmapping.VER_SEND_TS = chs.VER_SEND_TS;
		decl.collmovableselectmapping.BASIC_DATA_STATUS = chs.BASIC_DATA_STATUS;
		decl.collmovableselectmapping.COLL_DATA_STATUS = chs.COLL_DATA_STATUS;
		decl.collmovableselectmapping.COL_CAT_ID = chs.COL_CAT_ID;		
		decl.collmovableselectmapping.USE_ID_VER_SND = chs.USE_ID_VER_SND;
		decl.collmovableselectmapping.C_FINANCIAL_FLAG = chs.FINANCIAL_FLAG;	
		decl.collmovableselectmapping.C_txtUseIdSndVerLogin = chs.C_txtUseIdSndVerLogin;
		decl.collmovableselectmapping.C_txtUseIdSndVerName = chs.C_txtUseIdSndVerName;
		decl.collmovableselectmapping.C_txtUseIdVerLogin = chs.C_txtUseIdVerLogin;
		decl.collmovableselectmapping.C_txtUseIdVerName = chs.C_txtUseIdVerName;
		decl.collmovableselectmapping.C_txtUseIdAutLogin = chs.C_txtUseIdAutLogin;
		decl.collmovableselectmapping.C_txtUseIdAutName = chs.C_txtUseIdAutName;					
		decl.collmovableselectmapping.Coll_txtBasicDataSt = chs.Coll_txtBasicDataSt;
		decl.collmovableselectmapping.Coll_txtCollDataSt = chs.Coll_txtCollDataSt;
		decl.collmovableselectmapping.Coll_txtCoverIndic = chs.Coll_txtCoverIndic;
		decl.collmovableselectmapping.Coll_txtFinFlag = chs.Coll_txtFinFlag;
		decl.collmovableselectmapping.Coll_txtMortgageSt = chs.Coll_txtMortgageSt;
		decl.collmovableselectmapping.ColRba_txtEligibility = chs.ColRba_txtEligibility;
		decl.collmovableselectmapping.ColRba_txtEligDesc = chs.ColRba_txtEligDesc;
		decl.collmovableselectmapping.KolLow_txtEligibility = chs.KolLow_txtEligibility;
		decl.collmovableselectmapping.KolLow_txtEligDesc = chs.KolLow_txtEligDesc;	
		decl.collmovableselectmapping.Kol_txtRbaEligDsc = chs.Kol_txtRbaEligDsc; 	
		decl.collmovableselectmapping.Kol_txtVehiAmount = chs.Coll_txtEstnValu;  
		decl.collmovableselectmapping.Kol_txtVehiCur = chs.Coll_txtNmValCurr;           
		decl.collmovableselectmapping.veh_cur_id = chs.REAL_EST_NM_CUR_ID;		
		decl.collmovableselectmapping.Vehi_txtVehKasko = chs.INSPOL_IND;    
		decl.collmovableselectmapping.Coll_txtB1Eligibility = chs.Coll_txtB1Eligibility;
		decl.collmovableselectmapping.Coll_txtB1EligDesc = chs.Coll_txtB1EligDesc;
		decl.collmovableselectmapping.Coll_txtB2IRBEligibility = chs.Coll_txtB2IRBEligibility;
		decl.collmovableselectmapping.Coll_txtB2IRBEligDesc = chs.Coll_txtB2IRBEligDesc;
		decl.collmovableselectmapping.Kol_txtPonderMVP = chs.Kol_txtPonderMVP;
		decl.collmovableselectmapping.Kol_txtCRMHnb=chs.Kol_txtCRMHnb;
		decl.collmovableselectmapping.Coll_txtNDEligibility=chs.Coll_txtNDEligibility;
        decl.collmovableselectmapping.Coll_txtNDEligDesc=chs.Coll_txtNDEligDesc;
	  	
        decl.collmovableselectmapping.Coll_txtB2HNB= chs.b2_hnb_insag_elig;
        decl.collmovableselectmapping.Coll_txtB2IRB= chs.b2_irb_insag_elig;
        decl.collmovableselectmapping.Coll_txtB2HNB_OLD= chs.b2_hnb_insag_elig;
        decl.collmovableselectmapping.Coll_txtB2IRB_OLD= chs.b2_irb_insag_elig;
        decl.collmovableselectmapping.EST_TYPE_CODE= chs.est_type;
        decl.collmovableselectmapping.Coll_txtTypelValuer= chs.est_type_desc; 
        decl.collmovableselectmapping.Coll_txtInternalValuer= chs.real_est_estn_int; 
        decl.collmovableselectmapping.Coll_txtAssessmentMethod1Code= chs.met_est_1;
        decl.collmovableselectmapping.Coll_txtAssessmentMethod2Code= chs.met_est_2;
        decl.collmovableselectmapping.Coll_txtInsTotalCoverCode= null;
        decl.collmovableselectmapping.Coll_txtNonInsReasoneCode= chs.non_ins_reason;
        decl.collmovableselectmapping.Coll_txtAccuracyEstimatesCode= chs.prec_exec_est;
        decl.collmovableselectmapping.Coll_txtFairnessValuesCode= chs.correct_value; 
        decl.collmovableselectmapping.Coll_txtDeadLinesCode= chs.respect_deadline;
        decl.collmovableselectmapping.Coll_txtProfByRBACode= chs.prof_to_rba;
        decl.collmovableselectmapping.Coll_txtProfByClientCode= chs.prof_to_client; 
        decl.collmovableselectmapping.Coll_txtTypeTVCode= chs.real_est_nom_type; 
        decl.collmovableselectmapping.Coll_txtTypeTV= chs.real_est_nom_type_desc; 
        decl.collmovableselectmapping.USE_ID_CO= chs.use_id_co;
        decl.collmovableselectmapping.Coll_txtCollOfficer= chs.use_id_co_name;
        decl.collmovableselectmapping.Coll_txtContractTypeCode= chs.contract_type; 
        decl.collmovableselectmapping.Coll_txtContractTypeDesc= chs.contract_type_desc; 
        decl.collmovableselectmapping.Coll_txtRealPonderAmount= null; 
        decl.collmovableselectmapping.Coll_txtWcaOrigCurrencyCode= null;  
        decl.collmovableselectmapping.Coll_txtUsedWCAAmount= null;  

        decl.collmovableselectmapping.Coll_txtUsedInRecovery= chs.used_in_recovery; 
        decl.collmovableselectmapping.Coll_txtRecoveryProcStat= chs.recovery_proc_stat; 
        decl.collmovableselectmapping.Coll_txtKindOfRecoveryCode= chs.kind_of_recovery; 
        decl.collmovableselectmapping.Coll_txtKindOfRecoveryDesc= chs.kind_of_recovery_desc; 
        decl.collmovableselectmapping.Coll_txtFullAmountRecovery= chs.full_amount; 
        decl.collmovableselectmapping.Coll_txtFullAmountRecoveryCur= chs.full_amount_cur_codeChar;
        decl.collmovableselectmapping.CUR_ID_FULL_AMOUNT= chs.full_amount_cur_id; 
        decl.collmovableselectmapping.Coll_txtRecoveryAmount= chs.recovery_amount; 
        decl.collmovableselectmapping.Coll_txtRecoveryAmountCur= chs.recovery_cur_codeChar;
        decl.collmovableselectmapping.CUR_ID_RECOVERY_AMOUNT= chs.recovery_cur_id; 
        decl.collmovableselectmapping.Coll_txtRecoveryDate= chs.recovery_date; 
        decl.collmovableselectmapping.Coll_txtRecoveryRate= chs.recovery_rate; 
        decl.collmovableselectmapping.Coll_txtRecoveryComment= chs.recovery_comment;
        
        decl.collmovableselectmapping.Coll_txtRealizationAmount=chs.realization_amount;
        decl.collmovableselectmapping.CUR_ID_REALIZATION_AMOUNT=chs.realization_cur_id;
        decl.collmovableselectmapping.Coll_txtRealizationAmountCur=chs.realization_cur_char;
        decl.collmovableselectmapping.Coll_txtRealizationDate=chs.realization_date;
        decl.collmovableselectmapping.Coll_txtKindOfRealization=chs.realization_kind;
        decl.collmovableselectmapping.Coll_txtCostRealization=chs.realization_cost;    
        
        decl.collmovableselectmapping.REALIZATION_COST_CUR_ID=chs.realization_cost_cur_id;
        decl.collmovableselectmapping.Coll_txtCostRealizationCur=chs.realization_cost_cur_code_char;
        decl.collmovableselectmapping.Coll_txtForSale=chs.for_sale;
        decl.collmovableselectmapping.Coll_txtForSaleDate=chs.for_sale_date;
        decl.collmovableselectmapping.Coll_txtTakeOverBank=chs.takeover_from_bank;
        
        decl.collmovableselectmapping.Coll_txtCollateralGCTCCode= chs.gctc_code; 
        decl.collmovableselectmapping.Coll_txtCollateralGCTCDesc= chs.gctc_desc; 
        decl.collmovableselectmapping.Coll_txtEndorsementTypeGCTCCode= chs.endorsement_type_code;
        decl.collmovableselectmapping.Coll_txtEndorsementTypeGCTCDesc= chs.endorsement_type_desc;
        decl.collmovableselectmapping.Coll_txtObjectTypeGCTCCode= chs.object_type_code; 
        decl.collmovableselectmapping.Coll_txtObjectTypeGCTCDesc= chs.object_type_desc; 
        decl.collmovableselectmapping.Coll_txtPropertyTypeGCTCCode= chs.property_type_code; 
        decl.collmovableselectmapping.Coll_txtPropertyTypeGCTCDesc= chs.property_type_desc; 
        decl.collmovableselectmapping.Coll_txtB2ValueLLAmount= null;
        decl.collmovableselectmapping.Coll_txtB2ValueLLCurCode= null; 
        decl.collmovableselectmapping.Coll_txtB2ValueGLAmount= null;
        decl.collmovableselectmapping.Coll_txtB2ValueGLCurCode= null; 
        decl.collmovableselectmapping.Coll_txtEconomicLife = chs.col_eco_life; 
        
        decl.collmovableselectmapping.Coll_txtProccessing="";
        decl.collmovableselectmapping.Coll_txtProccessingTimestamp=chs.chg_nom_val_proc_ts;
	}
}  

