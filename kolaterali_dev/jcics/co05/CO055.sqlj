package hr.vestigo.modules.collateral.jcics.co05;

import hr.vestigo.framework.remote.transaction.*;
import hr.vestigo.modules.collateral.common.yoy0.YOY00;
import hr.vestigo.modules.collateral.common.yoy4.*;
import hr.vestigo.modules.collateral.common.yoy6.CalculationData;
import hr.vestigo.modules.collateral.common.yoy6.YOY63;
import hr.vestigo.modules.collateral.common.yoyG.YOYG0;

import java.sql.SQLException;
import java.math.BigDecimal;

/**
 *  * @author hramkr
 *  	
 */ 
       
   
public class CO055 extends RemoteTransaction {
		
	public static String cvsident ="@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/jcics/co05/CO055.sqlj,v 1.28 2017/06/01 12:03:47 hrazst Exp $";
	
	public DeclCO05 decl = null;
	private YOY63 SQLhelper = null;
	CollHeadInsertData chd = new CollHeadInsertData(); 
	
	public CO055 (DeclCO05 decl) {
		this.decl = decl;
	} 
	
	public void execute(TransactionContext tc) throws Exception {
		ConnCtx ctx = tc.getContext();
		SQLhelper = new YOY63(tc);
		#sql [ctx] {SET TRANSACTION ISOLATION LEVEL READ COMMITTED};

        String sign = decl.vesselinsertmapping.Ves_txtSign;           
//		 najprije provjeriti da li postoji u bazi plovilo s istim znakom raspoznavanja
        if(sign != null && !(sign.trim().equals(""))) {
    		int broj = 0;			
    		try {
    		    #sql [ctx] {SELECT COUNT(*)
						INTO :broj 
		    			FROM coll_vessel a, coll_head b
		    			WHERE 
							a.ves_sign=:(decl.vesselinsertmapping.Ves_txtSign)
						AND
							a.col_hea_id = b.col_hea_id
						AND
							b.collateral_status <> '4'
		    	};	    	
    		    	tc.debug ( "...broj: " + broj);
    	    } catch (SQLException  sqle) {
                throw  sqle;
            }
            if(broj > 0){
    		    throw new VestigoTMException(1, "Transaction CO055: Error inserting into coll_vessel! ","colErr014", null);
    		}	
        }		   
        //insert u COLL_HEAD		
		YOY40 headIns = new YOY40(tc, chd);				
		//punjenje objekta chd		
		fillCHDobj();				
		tc.debug("zovem insert u Head : " + chd.recept);				
		headIns.insertIntoCollHead();

		fillDeclFromCHDObj();		

		YOY00 id_generator = new YOY00(ctx);			//COLLATERAL_IDN
		BigDecimal collaterall_id = id_generator.getNewId();

		tc.debug("dohvat collateral_id : "+collaterall_id);			
				
		decl.vesselinsertmapping.COL_SEC_ID = collaterall_id;				
 
		try{	 

					#sql [ctx]{
							INSERT INTO coll_vessel
									(	col_ves_id , 
										col_hea_id , 
										ves_typ_id ,
										har_off_id , 
										ves_name ,
										ves_made_year ,
										ves_num_engine ,
										ves_sign ,
										ves_brutto ,
										ves_netto ,
										ves_number ,
										ves_licence ,
										ves_colour ,							
										ves_power_kw ,
										ves_equipment ,
										har_sec_id ,
										ves_dsc ,
										ves_ins_date ,
		                                estimate_cus_id  )
							VALUES( :(decl.vesselinsertmapping.COL_SEC_ID),    													                                                
									:(decl.vesselinsertmapping.COL_HEA_ID),
									:(decl.vesselinsertmapping.SEC_TYP_ID),                  
 									:(decl.vesselinsertmapping.HAR_OFF_ID),
									:(decl.vesselinsertmapping.Ves_txtName),                  
									:(decl.vesselinsertmapping.Ves_txMadeYear), 
									:(decl.vesselinsertmapping.Vessel_txtNumEngine), 
									:(decl.vesselinsertmapping.Ves_txtSign), 
									:(decl.vesselinsertmapping.Ves_txtBrutto), 
									:(decl.vesselinsertmapping.Ves_txtNetto), 
									:(decl.vesselinsertmapping.Ves_txtNumber), 
									:(decl.vesselinsertmapping.Ves_txtLicence), 
									:(decl.vesselinsertmapping.Vehicle_txtVehColour), 
									:(decl.vesselinsertmapping.Vessel_txtVehPowerKW), 
									:(decl.vesselinsertmapping.Vehicle_txtVehEquipment), 
									:(decl.vesselinsertmapping.HAR_SEC_ID), 
									:(decl.vesselinsertmapping.Ves_txtDsc), 
									:(decl.vesselinsertmapping.Vehi_txtVehInsDate),
		                            :(decl.vesselinsertmapping.Coll_txtEUsePersonCusId))
	
					};
				
			 
		}catch(SQLException se){
				
			tc.debug ( "......CO055.sqlj insert into coll_vessel SQL ErrorCode " + se.getErrorCode());
			tc.debug ( "......CO055.sqlj insert into coll_vessel SQL SQLState " + se.getSQLState());
			tc.debug ( "......CO055.sqlj insert into coll_vessel SQL Message " + se.getMessage());
			se.printStackTrace();
			throw new VestigoTMException(1, "Transaction CO055: Error inserting coll_vessel! ","err411a", null);
		}
					
		chd.action = "I";		

		// poziv common-a za update prihvatljivosti
        BigDecimal col_hea_id = decl.vesselinsertmapping.COL_HEA_ID;
        YOYG0 yoyg0 = new YOYG0(tc, col_hea_id);

        yoyg0.azurirajPrihvatljivosti();
        decl.vesselinsertmapping.Coll_txtNDEligibility =yoyg0.getNDPrihvatljivost();    
        decl.vesselinsertmapping.Coll_txtEligibility = yoyg0.getB2StandPrihvatljivost();
        decl.vesselinsertmapping.Coll_txtB1Eligibility = yoyg0.getHNBPrihvatljivost();
        decl.vesselinsertmapping.Coll_txtB2IRBEligibility = yoyg0.getB2IRBPrihvatljivost();

        decl.vesselinsertmapping.Coll_txtNDEligDesc = yoyg0.getOpisNDPrihvatljivosti();
        decl.vesselinsertmapping.Coll_txtEligDesc = yoyg0.getOpisB2StandPrihvatljivosti();
        decl.vesselinsertmapping.Coll_txtB1EligDesc = yoyg0.getOpisHNBPrihvatljivosti();
        decl.vesselinsertmapping.Coll_txtB2IRBEligDesc = yoyg0.getOpisB2IRBPrihvatljivosti();    
    
        CalculationData cData = SQLhelper.getAllCalculationData(decl.vesselinsertmapping.COL_HEA_ID); 
        decl.vesselinsertmapping.Coll_txtSumHipToFirstRBA = cData.sum_to_first_RBA_hip;          
	}//execute
	
	private void fillCHDobj () {

		chd.Coll_txtAcouBDate = decl.vesselinsertmapping.Coll_txtAcouBDate;
		chd.Coll_txtAcouBValue = decl.vesselinsertmapping.Coll_txtAcouBValue;
		chd.Coll_txtAcouDate = decl.vesselinsertmapping.Coll_txtAcouDate;
		chd.Coll_txtAcouValue = decl.vesselinsertmapping.Coll_txtAcouValue;
		chd.Coll_txtAddData = decl.vesselinsertmapping.Coll_txtAddData;
		chd.Coll_txtAmortAge = decl.vesselinsertmapping.Coll_txtAmortAge;
		chd.Coll_txtAmortValCal = decl.vesselinsertmapping.Coll_txtAmortValCal;
		chd.Coll_txtAvailDate = decl.vesselinsertmapping.Coll_txtAvailDate;
		chd.Coll_txtAvailPerCal = decl.vesselinsertmapping.Coll_txtAvailPerCal;
		chd.Coll_txtAvailValue = decl.vesselinsertmapping.Coll_txtAvailValue;
		chd.Coll_txtBptcDate = decl.vesselinsertmapping.Coll_txtBptcDate;
		chd.Coll_txtBptcValu = decl.vesselinsertmapping.Coll_txtBptcValu;
		chd.Coll_txtCollHnbPonder = decl.vesselinsertmapping.Coll_txtCollHnbPonder;
		chd.Coll_txtCollMvpPonder = decl.vesselinsertmapping.Coll_txtCollMvpPonder;
		chd.Coll_txtCollRzbPonder = decl.vesselinsertmapping.Coll_txtCollRzbPonder;
		chd.Coll_txtCollTypeCode = decl.vesselinsertmapping.Coll_txtCollTypeCode;
		chd.Coll_txtComDoc = decl.vesselinsertmapping.Coll_txtComDoc;
		chd.Coll_txtDateFrom = decl.vesselinsertmapping.Coll_txtDateFrom;
		chd.Coll_txtDateRecDoc = decl.vesselinsertmapping.Coll_txtDateRecDoc;
		chd.Coll_txtDateToDoc = decl.vesselinsertmapping.Coll_txtDateToDoc;
		chd.Coll_txtDateToLop = decl.vesselinsertmapping.Coll_txtDateToLop;
		chd.Coll_txtDateRecLop = decl.vesselinsertmapping.Coll_txtDateRecLop; 
		chd.Coll_txtRecLop = decl.vesselinsertmapping.Coll_txtRecLop; 			
		chd.Coll_txtDateUnti = decl.vesselinsertmapping.Coll_txtDateUnti; 
		chd.Coll_txtDatnFrom = decl.vesselinsertmapping.Coll_txtDatnFrom;
		chd.Coll_txtDatnUnti = decl.vesselinsertmapping.Coll_txtDatnUnti;
		chd.Coll_txtEstnDate = decl.vesselinsertmapping.Coll_txtEstnDate;
		chd.Coll_txtEstnValu = decl.vesselinsertmapping.Coll_txtEstnValu;
		chd.Coll_txtHfsValue = decl.vesselinsertmapping.Coll_txtHfsValue;
		chd.Coll_txtHfsValueDate = decl.vesselinsertmapping.Coll_txtHfsValueDate;
		chd.Coll_txtHfsDateLastOne = decl.vesselinsertmapping.Coll_txtHfsDateLastOne;
		chd.Coll_txtHfsValueLastOne = decl.vesselinsertmapping.Coll_txtHfsValueLastOne;
		chd.Coll_txtLiquDate = decl.vesselinsertmapping.Coll_txtLiquDate;
		chd.Coll_txtLiquValu = decl.vesselinsertmapping.Coll_txtLiquValu;
		chd.Coll_txtMissingDoc = decl.vesselinsertmapping.Coll_txtMissingDoc;
		chd.Coll_txtNepoDate = decl.vesselinsertmapping.Coll_txtNepoDate;
		chd.Coll_txtNepoPerCal = decl.vesselinsertmapping.Coll_txtNepoPerCal;
		chd.Coll_txtNepoValue = decl.vesselinsertmapping.Coll_txtNepoValue;
		chd.Coll_txtNomiDate = decl.vesselinsertmapping.Coll_txtNomiDate;
		chd.Coll_txtNomiDesc = decl.vesselinsertmapping.Coll_txtNomiDesc;
		chd.Coll_txtNomiValu = decl.vesselinsertmapping.Coll_txtNomiValu;
		chd.Coll_txtRevaBDate = decl.vesselinsertmapping.Coll_txtRevaBDate;
		chd.Coll_txtRevaBDateAM = decl.vesselinsertmapping.Coll_txtRevaBDateAM; 
		chd.Coll_txtRevaBValue = decl.vesselinsertmapping.Coll_txtRevaBValue ;
		chd.Coll_txtRevaCoefMan = decl.vesselinsertmapping.Coll_txtRevaCoefMan;
		chd.Coll_txtRevaDate = decl.vesselinsertmapping.Coll_txtRevaDate;
		chd.Coll_txtRevaDateAM = decl.vesselinsertmapping.Coll_txtRevaDateAM;
		chd.Coll_txtSumLimitDat = decl.vesselinsertmapping.Coll_txtSumLimitDat;
		chd.Coll_txtSumLimitVal = decl.vesselinsertmapping.Coll_txtSumLimitVal;
		chd.Coll_txtSumPartDat = decl.vesselinsertmapping.Coll_txtSumPartDat;
		chd.Coll_txtSumPartVal = decl.vesselinsertmapping.Coll_txtSumPartVal;
		chd.Coll_txtThirdRight = decl.vesselinsertmapping.Coll_txtThirdRight;
		chd.Coll_txtThirdRightDate = decl.vesselinsertmapping.Coll_txtThirdRightDate;
		chd.Coll_txtThirdRightInNom = decl.vesselinsertmapping.Coll_txtThirdRightInNom;
		chd.COL_TYPE_ID = decl.vesselinsertmapping.COL_TYPE_ID;
		chd.REAL_EST_EUSE_ID = decl.vesselinsertmapping.REAL_EST_EUSE_ID;
		chd.REAL_EST_NM_CUR_ID = decl.vesselinsertmapping.REAL_EST_NM_CUR_ID;
		chd.CUS_ID = decl.vesselinsertmapping.CUS_ID;
		chd.COLL_CUS_ID = decl.vesselinsertmapping.COLL_CUS_ID;
		chd.AMORT_PER_CAL_ID = decl.vesselinsertmapping.AMORT_PER_CAL_ID;
		chd.THIRD_RIGHT_CUR_ID = decl.vesselinsertmapping.THIRD_RIGHT_CUR_ID;
		chd.COL_PLACE = decl.vesselinsertmapping.COL_PLACE;
		chd.COL_COUNTY = decl.vesselinsertmapping.COL_COUNTY;
		chd.COL_DISTRICT = decl.vesselinsertmapping.COL_DISTRICT;
		chd.COL_RESI_QUAR = decl.vesselinsertmapping.COL_RESI_QUAR;
		chd.USE_OPEN_ID = decl.vesselinsertmapping.USE_OPEN_ID;
		chd.USE_ID = decl.vesselinsertmapping.USE_ID;
		chd.INSPOL_IND = decl.vesselinsertmapping.INSPOL_IND;
		chd.Coll_txtDesc = decl.vesselinsertmapping.Coll_txtDesc;	
		chd.recept = "CLT_VS";  
		chd.eve_typ_id =  new java.math.BigDecimal("1609190003.0");
		chd.Coll_txtAcumBuyValue = decl.vesselinsertmapping.Coll_txtAcumBuyValue;	
		chd.ORIGIN_ORG_UNI_ID = decl.vesselinsertmapping.ORIGIN_ORG_UNI_ID;
		chd.ORG_UNI_ID = decl.vesselinsertmapping.ORG_UNI_ID;
		chd.COL_CAT_ID = decl.vesselinsertmapping.col_cat_id;		
		chd.save_ver_aut_flag = decl.vesselinsertmapping.save_ver_aut_flag;		
		chd.KolLow_txtEligibility = decl.vesselinsertmapping.KolLow_txtEligibility;
		chd.ColRba_txtEligibility = decl.vesselinsertmapping.ColRba_txtEligibility;	
		chd.Kol_txtRbaEligDsc = decl.vesselinsertmapping.Kol_txtRbaEligDsc; 	
        chd.SPEC_STATUS = decl.vesselinsertmapping.SPEC_STATUS;    
        chd.Kol_txtCRMHnb = decl.vesselinsertmapping.Kol_txtCRMHnb;

        chd.used_in_recovery = decl.vesselinsertmapping.Coll_txtUsedInRecovery;
        chd.kind_of_recovery = decl.vesselinsertmapping.Coll_txtKindOfRecoveryCode;
        chd.full_amount = decl.vesselinsertmapping.Coll_txtFullAmountRecovery;
        chd.full_amount_cur_id = decl.vesselinsertmapping.CUR_ID_FULL_AMOUNT;
        chd.recovery_amount = decl.vesselinsertmapping.Coll_txtRecoveryAmount;
        chd.recovery_cur_id = decl.vesselinsertmapping.CUR_ID_RECOVERY_AMOUNT;
        chd.recovery_comment = decl.vesselinsertmapping.Coll_txtRecoveryComment;
        chd.recovery_date = decl.vesselinsertmapping.Coll_txtRecoveryDate;
        chd.recovery_rate = decl.vesselinsertmapping.Coll_txtRecoveryRate;
        
        chd.realization_amount = decl.vesselinsertmapping.Coll_txtRealizationAmount;
        chd.realization_cur_id = decl.vesselinsertmapping.CUR_ID_REALIZATION_AMOUNT;
        chd.realization_date = decl.vesselinsertmapping.Coll_txtRealizationDate;
        chd.realization_kind = decl.vesselinsertmapping.Coll_txtKindOfRealization;
        chd.realization_cost = decl.vesselinsertmapping.Coll_txtCostRealization;   
        
        chd.realization_cost_cur_id=decl.vesselinsertmapping.REALIZATION_COST_CUR_ID;
        chd.for_sale=decl.vesselinsertmapping.Coll_txtForSale;
        chd.for_sale_date=decl.vesselinsertmapping.Coll_txtForSaleDate;
        chd.takeover_from_bank=decl.vesselinsertmapping.Coll_txtTakeOverBank;
        
        chd.b2_irb_insag_elig = decl.vesselinsertmapping.Coll_txtB2IRB;
        chd.b2_hnb_insag_elig = decl.vesselinsertmapping.Coll_txtB2HNB;
        chd.use_id_co = decl.vesselinsertmapping.USE_ID_CO;
        chd.real_est_nom_type = decl.vesselinsertmapping.Coll_txtTypeTVCode;
        chd.prec_exec_est = decl.vesselinsertmapping.Coll_txtAccuracyEstimatesCode;
        chd.correct_value = decl.vesselinsertmapping.Coll_txtFairnessValuesCode;
        chd.respect_deadline = decl.vesselinsertmapping.Coll_txtDeadLinesCode;
        chd.prof_to_rba = decl.vesselinsertmapping.Coll_txtProfByRBACode;
        chd.prof_to_client = decl.vesselinsertmapping.Coll_txtProfByClientCode;
        chd.col_eco_life = decl.vesselinsertmapping.Coll_txtEconomicLife;
        chd.real_est_estn_int = decl.vesselinsertmapping.Coll_txtInternalValuer;
        chd.est_type = decl.vesselinsertmapping.EST_TYPE_CODE;
        chd.met_est_1 = decl.vesselinsertmapping.Coll_txtAssessmentMethod1Code;
        chd.met_est_2 = decl.vesselinsertmapping.Coll_txtAssessmentMethod2Code;
        chd.non_ins_reason = decl.vesselinsertmapping.Coll_txtNonInsReasoneCode;
        chd.ins_cov_coll = decl.vesselinsertmapping.Coll_txtInsTotalCoverCode;
        chd.recovery_proc_stat = decl.vesselinsertmapping.Coll_txtRecoveryProcStat; 
        chd.contract_type=decl.vesselinsertmapping.Coll_txtContractTypeCode;   
        chd.COL_SUB_ID=decl.vesselinsertmapping.SEC_TYP_ID; 
        chd.COL_GRO_ID=null;
	} 
 
	private void fillDeclFromCHDObj () {
		decl.vesselinsertmapping.COL_HEA_ID = chd.COL_HEA_ID;
		decl.vesselinsertmapping.Coll_txtUserLock = chd.Coll_txtUserLock;
		decl.vesselinsertmapping.Coll_txtCode = chd.Coll_txtCode;
		decl.vesselinsertmapping.STATUS = chd.STATUS;
		decl.vesselinsertmapping.Coll_txtOpeningTs = chd.Coll_txtOpeningTs;
		decl.vesselinsertmapping.EVE_ID = chd.EVE_ID;		
		decl.vesselinsertmapping.USER_LOCK = chd.USER_LOCK;
		
		decl.vesselinsertmapping.Coll_txtCollateralGCTCCode= chd.gctc_code; 
        decl.vesselinsertmapping.Coll_txtCollateralGCTCDesc= chd.gctc_desc; 
        decl.vesselinsertmapping.Coll_txtEndorsementTypeGCTCCode= chd.endorsement_type_code;
        decl.vesselinsertmapping.Coll_txtEndorsementTypeGCTCDesc= chd.endorsement_type_desc;
        decl.vesselinsertmapping.Coll_txtObjectTypeGCTCCode= chd.object_type_code; 
        decl.vesselinsertmapping.Coll_txtObjectTypeGCTCDesc= chd.object_type_desc; 
        decl.vesselinsertmapping.Coll_txtPropertyTypeGCTCCode= chd.property_type_code; 
        decl.vesselinsertmapping.Coll_txtPropertyTypeGCTCDesc= chd.property_type_desc; 
	}

}	
			
