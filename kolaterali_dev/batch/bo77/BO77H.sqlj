package hr.vestigo.modules.collateral.batch.bo77;

import hr.vestigo.framework.remote.batch.BatchContext;
import hr.vestigo.modules.collateral.common.yoyM.GcmTypeData;
import hr.vestigo.modules.collateral.common.yoyM.YOYM0;
import hr.vestigo.modules.rba.util.ExcelUtils;

import java.sql.*;

import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.streaming.SXSSFWorkbook;


/**
 * Klasa za kreiranje izvještaja Ukupno Co i Ret
 * @author hrakis
 */
public class BO77H
{
    public static String cvsident = "@(#) $Header: /var/cvsroot/java/src/hr/vestigo/modules/collateral/batch/bo77/BO77H.sqlj,v 1.5 2014/06/11 08:51:29 hrakis Exp $";

    private BatchContext bc;
    private Date value_date;
    private boolean isMonthlyReport;

    private YOYM0 mapping_gct;
    private YOYM0 mapping_gctc;
    private YOYM0 mapping_rre_cre;

    private Workbook workbook;
    private ExcelStyleData styles;
    private Sheet sheet;
    private int rowIndex;
    
    
    /**
     * Konstruktor klase.
     * @param batchContext Kontekst u kojem se izvršava obrada
     * @param value_date Datum valute (datum za koji se radi izvještaj)
     * @param isMonthlyReport da li se radi o mjeseènom izvještaju
     */
    public BO77H(BatchContext batchContext, Date value_date, boolean isMonthlyReport) throws Exception
    {
        this.bc = batchContext;
        this.value_date = value_date;
        this.isMonthlyReport = isMonthlyReport;

        // mapiranja
        this.mapping_gct = new YOYM0(bc, "gct", value_date);    // GCT kodovi
        this.mapping_gctc = new YOYM0(bc, "gctc", value_date);  // GCTC kodovi
        this.mapping_rre_cre = new YOYM0(bc, "rre_cre_indic", value_date);  // RRE/CRE indikator

        // kreiraj workbook
        this.workbook = new SXSSFWorkbook(100);
        this.styles = ExcelStyleData.createStyles(workbook);

        // stvaranje sheet-ova sa naslovom i zaglavljem tablice
        createSheets();
    }
    
    
    /**
     * Metoda kreira sheetove.
     */
    public void createSheets()
    {
        int[] columnWidths = new int[] { 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100 };
        
        sheet = workbook.createSheet("Svi");
        ExcelUtils.setColumnWidths(sheet, columnWidths);
        createHeading(sheet, "Svi");
        rowIndex = 4;
    }
    
    
    /**
     * Metoda stvara naslov lista kao i zaglavlje tablice.
     * @param sheet sheet u koji je potrebno upisati naslov
     * @param title header sheeta
     */
    public void createHeading(Sheet sheet, String title)
    {
        Row row = sheet.createRow(0);
        ExcelUtils.createCell(row, 0, "UKUPNO", styles.titleStyle);
        ExcelUtils.createCell(row, 1, "CO I RET", styles.titleStyle);

        row = sheet.createRow(1);
        ExcelUtils.createCell(row, 1, title, styles.normalStyle);
        
        row = sheet.createRow(3);
        ExcelUtils.createCell(row, 0, "Šifra kolaterala", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 1, "Kategorija kolaterala", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 2, "Vrsta kolaterala", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 3, "Podvrsta kolaterala", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 4, "Tip prema GCTC", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 5, "NCV", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 6, "WCOV / WGOV", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 7, "Plasman", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 8, "WCV", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 9, "B2 IRB prihv.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 10, "Evaluator", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 11, "Reval. date", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 12, "Due reval. date", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 13, "Dosp. pla.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 14, "Kol. ponder", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 15, "Discount", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 16, "Relation. manager", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 17, "IM vl. kol./izd. gar.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 18, "Ime vl. kol./izd. gar.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 19, "Rating vl. kol./izd. gar.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 20, "Rating vl. pla.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 21, "Earliest expiry", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 22, "Latest expiry", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 23, "Current LTV", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 24, "Insurance sum", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 25, "Insurance expiry date", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 26, "Premium paid", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 27, "GCT", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 28, "CRE/RRE indikator", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 29, "Country vl. kol./izd. gar.", styles.headingWrapAllBordersStyle);
        ExcelUtils.createCell(row, 30, "Kori\u0161teni ponder", styles.headingWrapAllBordersStyle);
    }
    
    
    
    /**
     * Metoda koja provjerava ulazi li zadani kolateral u izvještaj, dohvaæa dodatne podatke za taj kolateral i 
     * stvara redak u izlaznoj datoteci za njega (ako on u isti ulazi).
     * @param collateral Objekt s podacima o kolateralu
     * @param date Datum za koji vrijede dani podaci
     */
    public void processCollateral(CollateralData collateral, Date date)
    {
        // ako datum nije jednak datumu valute, preskoèi ovaj kolateral
        if (date.compareTo(value_date) != 0) return;

        // mapiranja
        GcmTypeData gctc_type = mapping_gctc.resolve(collateral.col_cat_id, collateral.col_typ_id, collateral.col_sub_id);
        String gctc = gctc_type != null ? gctc_type.name : null;
        
        GcmTypeData gct_type = mapping_gct.resolve(collateral.col_cat_id, collateral.col_typ_id, collateral.col_sub_id);
        String gct = gct_type != null ? gct_type.name : null;
        
        GcmTypeData rre_cre_type = mapping_rre_cre.resolve(collateral.col_cat_id, collateral.col_typ_id, collateral.col_sub_id);
        String rre_cre = rre_cre_type != null ? rre_cre_type.name : null;

        // upisivanje podatka u izvještaj Ukupno Co i Ret
        Row row = sheet.createRow(rowIndex);
        ExcelUtils.createCell(row, 0, collateral.col_num, styles.normalStyle);
        ExcelUtils.createCell(row, 1, collateral.col_cat_name, styles.normalStyle);
        ExcelUtils.createCell(row, 2, collateral.col_typ_name, styles.normalStyle);
        ExcelUtils.createCell(row, 3, collateral.col_sub_name, styles.normalStyle);
        ExcelUtils.createCell(row, 4, gctc, styles.normalStyle);
        ExcelUtils.createCell(row, 5, collateral.ncv, styles.normalStyle);
        ExcelUtils.createCell(row, 6, collateral.wcov, styles.normalStyle);
        ExcelUtils.createCell(row, 7, collateral.contract_acc_no, styles.normalStyle);
        ExcelUtils.createCell(row, 8, collateral.wcv, styles.normalStyle);
        ExcelUtils.createCell(row, 9, collateral.b2_irb_eligibility, styles.normalStyle);
        ExcelUtils.createCell(row, 10, "Collateral officer", styles.normalStyle);
        ExcelUtils.createCell(row, 11, collateral.last_evaluation, styles.normalDateStyle);
        ExcelUtils.createCell(row, 12, collateral.due_revaluation_date, styles.normalDateStyle);
        ExcelUtils.createCell(row, 13, collateral.placement_due_date, styles.normalDateStyle);
        ExcelUtils.createCell(row, 14, collateral.ponder, styles.normalNumericStyle);
        ExcelUtils.createCell(row, 15, collateral.actual_discont, styles.normalNumericStyle);
        ExcelUtils.createCell(row, 16, collateral.relationship_manag_name, styles.normalStyle);
        ExcelUtils.createCell(row, 17, "", styles.normalStyle);
        ExcelUtils.createCell(row, 18, "", styles.normalStyle);
        ExcelUtils.createCell(row, 19, "", styles.normalStyle);
        ExcelUtils.createCell(row, 20, collateral.placement_owner_rating, styles.normalStyle);
        ExcelUtils.createCell(row, 21, collateral.earliest_exp_date, styles.normalDateStyle);
        ExcelUtils.createCell(row, 22, collateral.latest_exp_date, styles.normalDateStyle);
        ExcelUtils.createCell(row, 23, collateral.ltv, styles.normalNumericStyle);
        ExcelUtils.createCell(row, 24, collateral.insurance_sum, styles.normalNumericStyle);
        ExcelUtils.createCell(row, 25, collateral.insurance_exp_date, styles.normalDateStyle);
        ExcelUtils.createCell(row, 26, collateral.premium_paid, styles.normalStyle);
        ExcelUtils.createCell(row, 27, gct, styles.normalStyle);
        ExcelUtils.createCell(row, 28, rre_cre, styles.normalStyle);
        ExcelUtils.createCell(row, 29, "", styles.normalStyle);
        ExcelUtils.createCell(row, 30, collateral.real_ponder, styles.normalStyle);
        rowIndex++;
        bc.debug("...Kolateral zapisan u izvjestaj Ukupno Co i Ret.");
    }
    
    
    
    /**
     * Metoda koja na temelju prikupljenih podataka kreira izvještaj u obliku Excel datoteke. 
     */
    public void createReport() throws Exception
    {
        // spremi izvještaj
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy_MM_dd");
        String reportScope = (isMonthlyReport ? "mjesecni" : "dnevni");
        String fileName = bc.getOutDir() + "/" + "Ukupno_Co_i_Ret" + "_" + dateFormat.format(value_date) + "_" + reportScope + ".xlsx";
        FileOutputStream fileOut = new FileOutputStream(fileName);
        workbook.write(fileOut);
        fileOut.close();
        dispose();
        
        // kreiraj marker datoteku
        new File(fileName + ".marker").createNewFile();
        
        bc.info("Uspjesno kreiran izvjestaj Ukupno Co i Ret " + reportScope + ".");
    }
    
    
    /**
     * Metoda koja briše privremene datoteke koje se stvaraju za vrijeme kreiranja izvještaja.
     */
    public void dispose()
    {
        if (workbook instanceof SXSSFWorkbook) ((SXSSFWorkbook)workbook).dispose();
    }
}